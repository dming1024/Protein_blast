showLegend=FALSE, askForOverwrite=FALSE)
Sys.getenv("PATH")
Sys.setenv(PATH="D:\\r\\rtools40\\usr\\bin;D:\\r\\rtools40\\usr\\bin;D:\\r\\R-3.6.1\\bin\\x64;C:\\Program Files\\Python39\\Scripts\\;C:\\Program Files\\Python39\\;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Users\\fan_qiangqiang\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\fan_qiangqiang\\AppData\\Local\\Programs\\Git\\cmd")
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="none",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
msaPrettyPrint(myFirstAlignment, output="pdf", file="resultHAT.pdf",
showNames="left", showLogo="top",
logoColors="rasmol", shadingMode="identical",
#shadingModeArg = "standard area",
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("resultHAT.tex",clean = T)
mySequenceFile <- "./fasta/CALM2.fa"
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("resultHAT.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
?texi2pdf
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T,index = F)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T,index = F)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
tools::texi2pdf("result.tex",clean = T)
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f
f[[25]]
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f
sprintf("\\topmargin=-%sin",1.5)
abc="\\begin{texshade}{C:/Users/FAN_QI~1/AppData/Local/Temp/Rtmp0GUBCf/seq313464b76cba.fasta}"
abc
gsub("FAN_QI~1","fan_qiangqiang",abc)
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f)
?writeLines
writeLines(f,"test.tex")
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,"result.tex")
tools::texi2pdf("result.tex",clean = T)
#multiple blast of proteins
#包含有多条蛋白氨基酸序列的fasta文件
library(msa)
mySequenceFile <- "./fasta/CCNI.fa"
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,"result.tex")
tools::texi2pdf("result.tex",clean = T)
mySequenceFile <- "./fasta/CNOT6L.fa"
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,"result.tex")
tools::texi2pdf("result.tex",clean = T)
mySequenceFile <- "./fasta/SPIT2.fa"
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines("result.tex")
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,"result.tex")
tools::texi2pdf("result.tex",clean = T)
#Phylogenetic Tree
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
library(seqinr)
d <- dist.alignment(hemoAln2, "identity")
library(ape)
hemoTree <- nj(d)
pdf("phylogenetic_of_SPIT2.pdf")
plot(hemoTree, main="Phylogenetic Tree of Both Genes")
dev.off()
?ape
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file="result.pdf",
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file=sprintf("result_%s.tex",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file=sprintf("result_%s.pdf",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
Gene="CALM2"
sprintf("result_%s.tex",Gene)
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file=sprintf("result_%s.pdf",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="pdf", file=sprintf("result_%s.pdf",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="tex", file=sprintf("result_%s.tex",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="tex", file=sprintf("result_%s.tex",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
proteionBlast("CCNI")
proteionBlast("CNOT6L")
proteionBlast("SPIT2")
library(UniprotR)
GetProteomeFasta(Accessions[1])
library(UniprotR)
Accessions <-GetAccessionList("https://s3.amazonaws.com/csvpastebin/uploads/9571fa356c67a0c7c95e8431799a051a/Accessions.csv")
GetProteomeFasta(Accessions[1])
GetProteomeFasta(Accessions[1])
#multiple blast of proteins
#包含有多条蛋白氨基酸序列的fasta文件
library(msa)
library(seqinr)
library(ape)
proteionBlast<-function(Gene){
mySequenceFile <- sprintf("./fasta/%s.fa",Gene)
mySequences <- readAAStringSet(mySequenceFile)
#run the clustalW
myFirstAlignment <- msa(mySequences)
#输出pretty的结果
msaPrettyPrint(myFirstAlignment, output="tex", file=sprintf("result_%s.tex",Gene),
showNames="left", showLogo="top",
shadingMode="identical",consensusColor="ColdHot",
#shadingModeArg = "standard area",
#furtherCode = c("\\showruler{1}{top}"),
showLegend=FALSE, askForOverwrite=FALSE)
#设置miktex路径
#Sys.getenv("PATH")
#Sys.getenv('R_HOME')
#Sys.which("pdflatex")
#Sys.setenv(PATH=paste(Sys.getenv("PATH"),"D:\\proteinBlast0223\\miktex\\soft\\miktex\\bin\\x64",sep=";"))
#修改tex文件中的texshade路径
#"C:/Users/fan_qiangqiang/AppData/Local/Temp/"
f=readLines(sprintf("result_%s.tex",Gene))
f[[25]]=gsub("FAN_QI~1","fan_qiangqiang",f[[25]])
f[[18]]=sprintf("\\topmargin=-%sin",1.5)
writeLines(f,sprintf("result_%s.tex",Gene))
tools::texi2pdf(sprintf("result_%s.tex",Gene),clean = T)
hemoAln2 <- msaConvert(myFirstAlignment, type="seqinr::alignment")
d <- dist.alignment(hemoAln2, "identity")
hemoTree <- nj(d)
pdf(sprintf("phylogenetic_of_%s.pdf",Gene))
plot(hemoTree, main=sprintf("Phylogenetic Tree of %s Genes",Gene))
dev.off()
}
proteionBlast("CALM2")
